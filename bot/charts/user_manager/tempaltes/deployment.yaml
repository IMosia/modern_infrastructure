apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "user-manager.fullname" . }}
  labels:
    {{- include "user-manager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "user-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "user-manager.selectorLabels" . | nindent 8 }}
      annotations:
        commit-hash: {{ .Values.commitHash }}
    spec:
      containers:
        - name: user_manager
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.container.port }}
              name: http-port
          #readinessProbe:
          #  httpGet:
          #    path: /health
          #    port: http-port
          #    scheme: HTTP
          #  timeoutSeconds: 1
          #  periodSeconds: 10
          #  failureThreshold: 3
          env:
            - name: FLASK_APP
              value: manager.py
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_DB
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_PORT
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: DB_HOST
            - name: FLASK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: FLASK_SECRET_KEY